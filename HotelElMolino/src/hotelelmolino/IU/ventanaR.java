/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelelmolino.IU;
    import java.sql.*;
    import java.util.ArrayList; 


/**
 *
 * @author angie
 */
public class ventanaR extends javax.swing.JFrame {
    static ventanaLogin ventanalogin = new ventanaLogin();   
    static ArrayList<String> datos = new ArrayList<String>();
    String rol =ventanalogin.getRol();

    /**
     * Creates new form ventanaR
     */
    public ventanaR() {
        initComponents();
        jButton2.setVisible(false);
        jButton1.setVisible(true);
        jTextField1.setVisible(false);
        jLabel1.setVisible(false);
        jTextField2.setVisible(false);
        jLabel2.setVisible(false);
        if((rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("mascota")) || (ventanalogin.getTabla().equals("historial paseos"))){
            jButton2.setVisible(true);
        jTextField1.setVisible(true);
        jLabel1.setVisible(true);
        jTextField2.setVisible(true);
        jLabel2.setVisible(true);
        jLabel1.setText("ID Due√±o");
        jLabel2.setText("Nombre Mascota");
        }
        if(ventanalogin.getTabla().equals("sugerencia")){
            jButton2.setVisible(true);
        jTextField1.setVisible(true);
        jLabel1.setVisible(true);
        jTextField2.setVisible(true);
        jLabel2.setVisible(true);
        jLabel1.setText("Fecha");
        jLabel2.setText("Reserva asociada");}
        
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("cliente")){
            jButton2.setVisible(true);
        jTextField1.setVisible(true);
        jLabel1.setVisible(true);
        jTextField2.setVisible(true);
        jLabel2.setVisible(true);}
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("reserva")){
            jButton2.setVisible(true);
        jTextField1.setVisible(true);
        jLabel1.setVisible(true);
        jTextField2.setVisible(true);
        jLabel2.setVisible(true);
        jLabel2.setText("Fecha");}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(36, 149, 253));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel5.setText("Registros de");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel3.setText("HOTEL EL MOLINO");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel6.setText(ventanalogin.getTabla());

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotelelmolino/IMAGENES/regresra.png"))); // NOI18N
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("");
        jTextArea1.setToolTipText("");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setText("Cargar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("BUSCAR");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Cliente");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellido");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton6)
                .addContainerGap(822, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        ventanalogin.verificarRol(this);
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if((rol.equals("AtencionAlCliente") || rol.equals("AtencionAlCliente") )&& ventanalogin.getTabla().equals("parqueadero")){
            try {
            Statement s = ventanalogin.getConexion().createStatement();
            ResultSet rs = s.executeQuery("select * from "+ventanalogin.getTabla()); 
            String ocupado;
            while (rs.next()) {
                if(rs.getInt(2)==1){ocupado="Ocupado";}else{ocupado="Disponible";}
                if(rs.getInt(3)==0){
                    datos.add(
                        "N√∫mero parqueadero: " + rs.getInt(1)
                        + "\t" + ocupado+"\n");
                }else{
                    datos.add(
                        "N√∫mero del parqueadero: " + rs.getInt(1)
                        + "\t" + ocupado
                        + "\tCaba√±a asociada: " + rs.getInt(3)+"\n");}
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AtencionAlCliente") && ventanalogin.getTabla().equals("caba√±a")){
            try {
            Statement s = ventanalogin.getConexion().createStatement();
            ResultSet rs = s.executeQuery("select * from "+ventanalogin.getTabla());            
            while (rs.next()) {
                datos.add(
                        "N√∫mero de caba√±a: " + rs.getInt(1)
                        + "\tCapacidad: " + rs.getInt(2)
                        + "\t\tCamas Dobles: " + rs.getInt(3)
                        + "\tCamas Sencillas: " + rs.getInt(4)
                        + "\tHabitaciones: " + rs.getInt(5)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AdministradorInventarios")&& ventanalogin.getTabla().equals("inventario")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from inventario"); 
            while (rs2.next()) {
                datos.add(
                        "Nombre producto/s: " + rs2.getString(1)
                        + "\tProovedor: " + rs2.getString(2)
                        + "\tCosto Producto: " + rs2.getFloat(3)
                        + "\tCantidad por Habitacion: " + rs2.getInt(4)
                        + "\tCantidad en hotel: " + rs2.getInt(5)
                        + "\tID admnistrador: " + rs2.getInt(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AdministradorInventarios")&& ventanalogin.getTabla().equals("historial inventario")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from historial_inventario"); 
            while (rs2.next()) {
                datos.add(
                        "ID Historial: " + rs2.getInt(1)
                        + "\tAcci√≥n: " + rs2.getString(2)
                        + "\t\tAntiguo Nombre: " + rs2.getString(3)
                        + "\tNuevo Nombre: " + rs2.getString(4)
                        + "\tAntiguo Proveedor: " + rs2.getString(5)
                        + "\tNuevo Proveedor: " + rs2.getString(6)
                        + "\tAntiguo Costo Producto: " + rs2.getBigDecimal(7)
                        + "\tNuevo Costo Producto: " + rs2.getBigDecimal(8)
                        + "\tAntigua Cantidad Habitaci√≥n: " + rs2.getInt(9)
                        + "\tNueva Cantidad Habitaci√≥n: " + rs2.getInt(10)
                        + "\tAntigua Cantidad Hotel: " + rs2.getInt(11)
                        + "\tNueva Cantidad Hotel: " + rs2.getInt(12)
                        + "\tAntiguo ID Administrador: " + rs2.getLong(13)
                        + "\tNuevo ID Administrador: " + rs2.getLong(14)
                        + "\tFecha Acci√≥n: " + rs2.getTimestamp(15)
                        + "\tUsuario: " + rs2.getString(16) + "\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("servicios")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from caba√±a_has_servicio"); 
            while (rs2.next()) {
                datos.add(
                        "Servicio: " + rs2.getString(1)
                        + "\t\tCaba√±a que lo tiene: " + rs2.getInt(2)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AdministradorReservas")&& ventanalogin.getTabla().equals("servicios")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from vista_admin_reserva_caba√±a_servicio"); 
            while (rs2.next()) {
                datos.add(
                        "N√∫mero de caba√±a: " + rs2.getInt(1)
                        + "\tCapacidad: " + rs2.getInt(2)
                        + "\t\tCamas Dobles: " + rs2.getInt(3)
                        + "\tCamas Sencillas: " + rs2.getInt(4)
                        + "\tHabitaciones: " + rs2.getInt(5)
                                + "\tServicio que tiene: " + rs2.getString(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }
        if(rol.equals("AdministradorReservas")&& ventanalogin.getTabla().equals("sugerencia")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from sugerencia"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\tFecha: " + rs2.getDate(2)
                        + "\tDescripci√≥n: " + rs2.getString(3)
                        + "\tId reserva asociada: " + rs2.getInt(4)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }
        }
        if(rol.equals("AdministradorReservas") && ventanalogin.getTabla().equals("reserva")){
            try {
            Statement s = ventanalogin.getConexion().createStatement();
            ResultSet rs = s.executeQuery("select * from vista_admin_reserva_caba√±a");            
            while (rs.next()) {
                datos.add(
                        "Id Reserva: " + rs.getInt(1)
                        + "\tCliente Id: " + rs.getInt(2)
                        + "\tDuracion estad√≠a: " + rs.getInt(3)
                        + "\tCheck In: " + rs.getDate(4)
                        + "\tCheck Out: " + rs.getDate(5)
                        + "\tCosto: " + rs.getInt(6)
                        + "\tM√©todo de pago: " + rs.getString(7)+
                                "Cantidad Huespedes: " + rs.getInt(8)
                        + "\tAdmin Id: " + rs.getInt(9)
                        + "\tTrabajador Id: " + rs.getInt(10)
                        + "\tCapacidad Caba√±a: " + rs.getInt(11)
                        + "\tCAmas Dobles: " + rs.getInt(12)
                        + "\tCamas sencillas: " + rs.getInt(13)
                        + "\tHabitaciones: " + rs.getInt(14)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }        
        }  
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("mascota")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from mascota"); 
            while (rs2.next()) {
                datos.add(
                        "Id Due√±o: " + rs2.getInt(1)
                        + "\tNombre mascota: " + rs2.getString(2)
                        + "\tRaza: " + rs2.getString(3)
                        + "\t\tEspecie: " + rs2.getString(4)
                        + "\t\tG√©nero: " + rs2.getString(5)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }}
            if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("cliente")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from cliente"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\t\tNombre: " + rs2.getString(2)
                        + "\t\tApellido: " + rs2.getString(3)
                        + "\t\tVeh√≠culo: " + rs2.getString(4)
                        + "\t\tNacionalidad: " + rs2.getString(5)
                                + "\t\tTelefono: " + rs2.getInt(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
        }}
            if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("reserva")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from reserva"); 
            while (rs2.next()) {
                datos.add(
                        "Id Reserva: " + rs2.getInt(1)
                        + "\tCliente Id: " + rs2.getInt(2)
                        + "\tCantidad de d√≠as: " + rs2.getInt(3)
                        + "\tCheck In: " + rs2.getDate(4)
                        + "\tCheck Out: " + rs2.getDate(5)
                        + "\tCosto: " + rs2.getInt(6)
                        + "\tM√©todo de pago: " + rs2.getString(7)
                        + "\tId Empleado: " + rs2.getInt(10)
                        + "\tId Administrador: " + rs2.getInt(9)
                                + "\tHuespedes: " + rs2.getInt(8)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }
            }
        if(rol.equals("AdministradorReservas") && (ventanalogin.getTabla().equals("mascota") || ventanalogin.getTabla().equals("cliente"))){
            try {
                Statement s = ventanalogin.getConexion().createStatement();
                ResultSet rs = s.executeQuery("select * from vista_admin_reserva_huespedes");
                while (rs.next()) {
                    datos.add(
                        "Id Cliente: " + rs.getInt(1)
                        + "\tNombre: " + rs.getString(2)
                        + "\tApellido: " + rs.getString(3)
                        + "\tVeh√≠culo: " + rs.getString(4)
                        + "\tNacionalidad: " + rs.getString(5)
                        + "\tTelefono: " + rs.getInt(6)
                        + "\tNombre Mascota: " + rs.getString(7)
                        + "\tRaza: " + rs.getString(8)
                        + "\tG√©nero: " + rs.getString(9)+"\n");
                }
            } catch (SQLException ex) {
                System.out.println("Imposible realizar consulta ... FAIL");
            }
        }
        if(rol.equals("AdministradorReservas") && (ventanalogin.getTabla().equals("historial paseos"))){
            try {
                Statement s = ventanalogin.getConexion().createStatement();
                ResultSet rs = s.executeQuery("select * from registro_paseos;");
                while (rs.next()) {
                    datos.add(
                        "Registro: " + rs.getInt(1)
                        + "\tId Cliente: " + rs.getInt(2)
                        + "\tNombre Mascota: " + rs.getString(3)
                        + "\tHora inicio: " + rs.getTime(4)
                        + "\tHora finalizacion: " + rs.getTime(5)
                        + "\tFecha: " + rs.getDate(6)
                        + "\tCuidador: " + rs.getString(7)+"\n");
                }
            } catch (SQLException ex) {
                System.out.println("Imposible realizar consulta ... FAIL");
                System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            }
        }
        jTextArea1.setText(""+datos);
        datos.clear();        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if(rol.equals("AdministradorReservas")&& ventanalogin.getTabla().equals("sugerencia")){
            if(jTextField2.getText().equals("0")){         
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from sugerencia WHERE  sug_fecha = '"+jTextField1.getText()+"' ;"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\tFecha: " + rs2.getDate(2)
                        + "\tDescripci√≥n: " + rs2.getString(3)
                        + "\tId reserva asociada: " + rs2.getInt(4)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }
        }
            if(jTextField1.getText().equals("0")){         
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from sugerencia WHERE  sug_res_id = "+jTextField2.getText()+";"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\tFecha: " + rs2.getDate(2)
                        + "\tDescripci√≥n: " + rs2.getString(3)
                        + "\tId reserva asociada: " + rs2.getInt(4)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }
        }else{
                try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from sugerencia WHERE  sug_res_id = "+jTextField2.getText()+" AND sug_fecha '"+jTextField1.getText()+"' ;"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\tFecha: " + rs2.getDate(2)
                        + "\tDescripci√≥n: " + rs2.getString(3)
                        + "\tId reserva asociada: " + rs2.getInt(4)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }
            }
        }
      
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("mascota")){
            if(jTextField2.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from mascota WHERE  mas_cli_id = "+jTextField1.getText()+";"); 
            while (rs2.next()) {
                datos.add(
                        "Id Due√±o: " + rs2.getInt(1)
                        + "\tNombre mascota: " + rs2.getString(2)
                        + "\tRaza: " + rs2.getString(3)
                        + "\t\tEspecie: " + rs2.getString(4)
                        + "\t\tG√©nero: " + rs2.getString(5)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}
            if(jTextField1.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from mascota WHERE  mas_nombre= '"+jTextField2.getText()+"';"); 
            while (rs2.next()) {
                datos.add(
                        "Id Due√±o: " + rs2.getInt(1)
                        + "\tNombre mascota: " + rs2.getString(2)
                        + "\tRaza: " + rs2.getString(3)
                        + "\t\tEspecie: " + rs2.getString(4)
                        + "\t\tG√©nero: " + rs2.getString(5)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}else{
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from mascota WHERE  mas_cli_id= "+jTextField1.getText()+" AND mas_nombre= '"+jTextField2.getText()+"';");
            while (rs2.next()) {
                datos.add(
                        "Id Due√±o: " + rs2.getInt(1)
                        + "\tNombre mascota: " + rs2.getString(2)
                        + "\tRaza: " + rs2.getString(3)
                        + "\t\tEspecie: " + rs2.getString(4)
                        + "\t\tG√©nero: " + rs2.getString(5)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}}
       if(rol.equals("AdministradorReservas") && (ventanalogin.getTabla().equals("historial paseos"))){
           if(jTextField2.getText().equals("0")){
           try {
                Statement s = ventanalogin.getConexion().createStatement();
                ResultSet rs = s.executeQuery("select * from registro_paseos WHERE  mas_cli_id= "+jTextField1.getText()+";");
                while (rs.next()) {
                    datos.add(
                        "Registro: " + rs.getInt(1)
                        + "\tId Cliente: " + rs.getInt(2)
                        + "\tNombre Mascota: " + rs.getString(3)
                        + "\tHora inicio: " + rs.getTime(4)
                        + "\tHora finalizacion: " + rs.getTime(5)
                        + "\tFecha: " + rs.getDate(6)
                        + "\tCuidador: " + rs.getString(7)+"\n");
                }
            } catch (SQLException ex) {
                System.out.println("Imposible realizar consulta ... FAIL");
                System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());} } 
           if(jTextField1.getText().equals("0")){
           try {
                Statement s = ventanalogin.getConexion().createStatement();
                ResultSet rs = s.executeQuery("select * from registro_paseos WHERE  mas_nombre= '"+jTextField2.getText()+"';");
                while (rs.next()) {
                    datos.add(
                        "Registro: " + rs.getInt(1)
                        + "\tId Cliente: " + rs.getInt(2)
                        + "\tNombre Mascota: " + rs.getString(3)
                        + "\tHora inicio: " + rs.getTime(4)
                        + "\tHora finalizacion: " + rs.getTime(5)
                        + "\tFecha: " + rs.getDate(6)
                        + "\tCuidador: " + rs.getString(7)+"\n");
                }
            } catch (SQLException ex) {
                System.out.println("Imposible realizar consulta ... FAIL");
                System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());} } 
           else{
            try {
                Statement s = ventanalogin.getConexion().createStatement();
                ResultSet rs = s.executeQuery("select * from registro_paseos WHERE  mas_cli_id= "+jTextField1.getText()+" AND mas_nombre= '"+jTextField2.getText()+"';");
                while (rs.next()) {
                    datos.add(
                        "Registro: " + rs.getInt(1)
                        + "\tId Cliente: " + rs.getInt(2)
                        + "\tNombre Mascota: " + rs.getString(3)
                        + "\tHora inicio: " + rs.getTime(4)
                        + "\tHora finalizacion: " + rs.getTime(5)
                        + "\tFecha: " + rs.getDate(6)
                        + "\tCuidador: " + rs.getString(7)+"\n");
                }
            } catch (SQLException ex) {
                System.out.println("Imposible realizar consulta ... FAIL");
                System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            }}
        }
       
       if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("cliente")){
           if(jTextField2.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from cliente WHERE cli_id = "+jTextField1.getText()+";"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\t\tNombre: " + rs2.getString(2)
                        + "\t\tApellido: " + rs2.getString(3)
                        + "\t\tVeh√≠culo: " + rs2.getString(4)
                        + "\t\tNacionalidad: " + rs2.getString(5)
                                + "\t\tTelefono: " + rs2.getInt(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}
           if(jTextField1.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from cliente WHERE cli_apellido = '"+jTextField2.getText()+"' ;"); 
            while(rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\t\tNombre: " + rs2.getString(2)
                        + "\t\tApellido: " + rs2.getString(3)
                        + "\t\tVeh√≠culo: " + rs2.getString(4)
                        + "\t\tNacionalidad: " + rs2.getString(5)
                                + "\t\tTelefono: " + rs2.getInt(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}else{
               try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from cliente WHERE cli_apellido = '"+jTextField2.getText()+"' AND cli_id = "+jTextField1.getText()+";"); 
            while (rs2.next()) {
                datos.add(
                        "Id: " + rs2.getInt(1)
                        + "\t\tNombre: " + rs2.getString(2)
                        + "\t\tApellido: " + rs2.getString(3)
                        + "\t\tVeh√≠culo: " + rs2.getString(4)
                        + "\t\tNacionalidad: " + rs2.getString(5)
                                + "\t\tTelefono: " + rs2.getInt(6)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }           
           }       
       }
       
        if(rol.equals("AtencionAlCliente")&& ventanalogin.getTabla().equals("reserva")){
            if(jTextField2.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from reserva WHERE res_cli_id= "+jTextField1.getText()+";");  
            while (rs2.next()) {
                datos.add(
                        "Id Reserva: " + rs2.getInt(1)
                        + "\tCliente Id: " + rs2.getInt(2)
                        + "\tCantidad de d√≠as: " + rs2.getInt(3)
                        + "\tCheck In: " + rs2.getDate(4)
                        + "\tCheck Out: " + rs2.getDate(5)
                        + "\tCosto: " + rs2.getInt(6)
                        + "\tM√©todo de pago: " + rs2.getString(7)
                        + "\tId Empleado: " + rs2.getInt(10)
                        + "\tId Administrador: " + rs2.getInt(9)
                                + "\tHuespedes: " + rs2.getInt(8)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}if(jTextField1.getText().equals("0")){
            try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from reserva WHERE res_check_in =  '"+jTextField2.getText()+"' OR res_check_out = '"+jTextField2.getText()+"';");  
            while (rs2.next()) {
                datos.add(
                        "Id Reserva: " + rs2.getInt(1)
                        + "\tCliente Id: " + rs2.getInt(2)
                        + "\tCantidad de d√≠as: " + rs2.getInt(3)
                        + "\tCheck In: " + rs2.getDate(4)
                        + "\tCheck Out: " + rs2.getDate(5)
                        + "\tCosto: " + rs2.getInt(6)
                        + "\tM√©todo de pago: " + rs2.getString(7)
                        + "\tId Empleado: " + rs2.getInt(10)
                        + "\tId Administrador: " + rs2.getInt(9)
                                + "\tHuespedes: " + rs2.getInt(8)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }}else{
             try {            
            Statement s2 = ventanalogin.getConexion().createStatement();
            ResultSet rs2 = s2.executeQuery("select * from reserva WHERE res_cli_id= "+jTextField1.getText()+" AND (res_check_in =  '"+jTextField2.getText()+"' OR res_check_out = '"+jTextField2.getText()+"');");
            while (rs2.next()) {
                datos.add(
                        "Id Reserva: " + rs2.getInt(1)
                        + "\tCliente Id: " + rs2.getInt(2)
                        + "\tCantidad de d√≠as: " + rs2.getInt(3)
                        + "\tCheck In: " + rs2.getDate(4)
                        + "\tCheck Out: " + rs2.getDate(5)
                        + "\tCosto: " + rs2.getInt(6)
                        + "\tM√©todo de pago: " + rs2.getString(7)
                        + "\tId Empleado: " + rs2.getInt(10)
                        + "\tId Administrador: " + rs2.getInt(9)
                                + "\tHuespedes: " + rs2.getInt(8)+"\n");
            }
        } catch (SQLException ex) {
            System.out.println("Imposible realizar consulta ... FAIL");
            System.out.println("Error de SQL: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("C√≥digo de error: " + ex.getErrorCode());
            ex.printStackTrace();
        }
        
        }
            }
        jTextArea1.setText(""+datos);
        datos.clear();  
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaR().setVisible(true);                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
